version: '3.9'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - static_volume:/app/staticfiles:ro
    restart: always

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-letsencrypt
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEFAULT_EMAIL=michaelmbuchman@gmail.com
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory
    restart: always

  nginx:
    image: nginx:alpine
    container_name: trivia_app_nginx
    expose:
      - "80"
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    environment:
      - VIRTUAL_HOST=marleybuchman.com,www.marleybuchman.com
      - VIRTUAL_PORT=80

  web:
    build:
      context: .
    container_name: trivia_app_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py loaddata db_initial_data.json &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 pub_trivia.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=marleybuchman.com,www.marleybuchman.com
      - LETSENCRYPT_HOST=marleybuchman.com,www.marleybuchman.com
      - VIRTUAL_PORT=8000
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:14
    container_name: trivia_app_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
  conf:
  vhost:
  html:
  certs:
  acme:
